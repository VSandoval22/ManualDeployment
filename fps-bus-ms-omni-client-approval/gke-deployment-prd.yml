apiVersion: apps/v1
kind: Deployment
metadata:
  name: fps-bus-ms-omni-client-approval
  namespace: omnichannel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fps-bus-ms-omni-client-approval
      tier: backend
  template:
    metadata:
      labels:
        app: fps-bus-ms-omni-client-approval
        tier: backend
    spec:
      containers:
        - name: fps-bus-ms-omni-client-approval
          image: gcr.io/#{PROJECT}/fps-bus-ms-omni-client-approval:#{TAG}
          env:
            - name: profile
              value: prd
            - name: NEW_RELIC_APP_NAME
              value: fps-bus-ms-omni-client-approval
            - name: NEW_RELIC_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic
                  key: licensekey    
          resources:
            requests:
              cpu: 0.5
              memory: "512Mi"
            limits:
              cpu: 1
              memory: "1512Mi"
          ports:
            - containerPort: 8080
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: fps-bus-ms-omni-client-approval
  namespace: omnichannel
spec:
  selector:
    app: fps-bus-ms-omni-client-approval
    tier: backend
  ports:
    - name: http
      protocol: "TCP"
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fps-bus-ms-omni-client-approval
  namespace: omnichannel
  annotations:
    kubernetes.io/ingress.class: "nginx"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-buffer-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.org/location-snippets: |
      server_tokens off;
      add_header Content-Security-Policy: "default-src 'self'; script-src 'self' https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/; object-src 'none'; style-src 'self' 'unsafe-inline'; frame-src 'self' https://www.google.com/recaptcha/; script-src 'self' https://www.google-analytics.com";
      add_header Referrer-Policy: "Referrer-Policy: strict-origin-when-cross-origin";
      add_header X-Frame-Options: "SAMEORIGIN" always;
      add_header X-XSS-Protection: "1; mode=block" always;
      add_header X-Content-Type-Options: "nosniff" always;
      add_header Feature-Policy "autoplay 'none'; camera 'none'" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
  labels:
    type: endpoints-app
    owner: fps
spec:
  tls:
    - hosts:
        - omnichannel-fps-bus-ms-omni-client-approval-ws.fapedigital.com
      secretName: fapedigital-com
  rules:
    - host: omnichannel-fps-bus-ms-omni-client-approval-ws.fapedigital.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: fps-bus-ms-omni-client-approval
                port:
                  number: 8080
